{"version":3,"file":"view.js","sourceRoot":"","sources":["../src/view.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport {\n    Caret,\n    CaretEventType,\n    Direction,\n    Dom,\n    ICaretEvent,\n    KeyCode,\n    Template,\n    View,\n} from \"@fluid-example/flow-util-lib\";\nimport { debug } from \"./debug\";\nimport * as style from \"./index.css\";\n\nconst template = new Template({\n    tag: \"div\", props: { className: style.math }, children: [\n        { tag: \"div\", ref: \"cell\", props: { className: style.cell } },\n        { tag: \"input\", ref: \"input\", props: { className: style.input } },\n    ],\n});\n\ninterface IMathInit extends IMathProps { }\ninterface IMathProps { }\n\nexport class MathView extends View<IMathInit, IMathProps> {\n    private input?: HTMLInputElement;\n    private cell?: Element;\n\n    protected onAttach(init: Readonly<IMathInit>): Element {\n        const root = template.clone();\n        this.input = template.get(root, \"input\") as HTMLInputElement;\n        this.cell = template.get(root, \"cell\");\n        this.input.value = \"f(t) = sin(t)\";\n\n        this.onDom(this.input, \"input\", this.onInputChanged);\n        this.onDom(this.input, \"paste\", this.onInputChanged);\n        this.onDom(this.input, \"keydown\", this.onKeyDown);\n        this.onDom(this.input, \"keypress\", this.onInputChanged);\n        this.onDom(root, CaretEventType.enter, this.onCaretEnter as EventHandlerNonNull);\n        this.onInputChanged();\n\n        return root;\n    }\n\n    protected onUpdate(props: Readonly<IMathProps>): void {\n        // Do nothing\n    }\n\n    protected onDetach(): void {\n        // Do nothing\n    }\n\n    private readonly onInputChanged = () => {\n        this.cell.textContent = this.input.value;\n    };\n\n    private caretLeave(e: KeyboardEvent, direction: Direction) {\n        const caretBounds = Dom.getClientRect(this.cell.firstChild, this.input.selectionEnd) as DOMRect;\n        if (Caret.caretLeave(this.input, direction, caretBounds)) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    private readonly onKeyDown = (e: KeyboardEvent) => {\n        switch (e.code) {\n            case KeyCode.arrowLeft:\n                if (this.input.selectionEnd === 0) {\n                    this.caretLeave(e, Direction.left);\n                }\n                break;\n            case KeyCode.arrowRight:\n                if (this.input.selectionEnd === this.input.value.length) {\n                    this.caretLeave(e, Direction.right);\n                }\n                break;\n            case KeyCode.arrowUp:\n                this.caretLeave(e, Direction.up);\n                break;\n            case KeyCode.arrowDown:\n                this.caretLeave(e, Direction.down);\n                break;\n            default:\n                this.onInputChanged();\n        }\n    };\n\n    private verticalCaretEnter(e: ICaretEvent) {\n        const { left } = e.detail.caretBounds;\n        const offset = Dom.findNodeOffset(this.cell.firstChild, left, -Infinity, +Infinity);\n        this.input.setSelectionRange(offset, offset, \"forward\");\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    private readonly onCaretEnter = (e: ICaretEvent) => {\n        debug(`onCaretEnter(${JSON.stringify(e.detail)})`);\n\n        const input = this.input;\n        input.focus();\n\n        switch (e.detail.direction) {\n            case Direction.left:\n                input.setSelectionRange(input.value.length, input.value.length, \"backward\");\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            case Direction.right:\n                input.setSelectionRange(0, 0, \"forward\");\n                e.preventDefault();\n                e.stopPropagation();\n                break;\n            case Direction.up:\n            case Direction.down:\n                this.verticalCaretEnter(e);\n                break;\n            default:\n        }\n    };\n}\n"]}